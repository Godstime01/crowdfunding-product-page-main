(()=>{"use strict";var n={564:(n,e,t)=>{t.d(e,{A:()=>A});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([n.id,'\n\n/* modal styles */\n/**************************\\\n  Basic Modal Styles\n\\**************************/\n\n.modal {\n    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;\n}\n\n.modal__overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.6);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.modal__container {\n    background-color: #fff;\n    padding: 30px;\n    min-width: calc(100vw - 3rem);\n    max-width: calc(100% - 50rem);\n    max-height: calc(100vh - 5rem);\n    border-radius: 4px;\n    overflow-x: hidden;\n    overflow-y: auto;\n    box-sizing: border-box;\n}\n\n.modal__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.modal__title {\n    margin-top: 0;\n    margin-bottom: 0;\n    font-weight: 600;\n    font-size: 1.25rem;\n    line-height: 1.25;\n    color: var(--black);\n}\n\n.modal__close {\n    background: transparent;\n    border: 0;\n}\n\n.modal__header .modal__close:before {\n    content: "\\2715";\n}\n\n.modal__content {\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    color: rgba(0, 0, 0, .8);\n}\n\n#modal-2{\n    text-align: center;\n}\n\n\n\n/**************************\\\n    Demo Animation Style\n  \\**************************/\n@keyframes mmfadeIn {\n    from {\n        opacity: 0;\n    }\n\n    to {\n        opacity: 1;\n    }\n}\n\n@keyframes mmfadeOut {\n    from {\n        opacity: 1;\n    }\n\n    to {\n        opacity: 0;\n    }\n}\n\n@keyframes mmslideIn {\n    from {\n        transform: translateY(15%);\n    }\n\n    to {\n        transform: translateY(0);\n    }\n}\n\n@keyframes mmslideOut {\n    from {\n        transform: translateY(0);\n    }\n\n    to {\n        transform: translateY(-10%);\n    }\n}\n\n.micromodal-slide {\n    display: none;\n}\n\n.micromodal-slide.is-open {\n    display: block;\n}\n\n.micromodal-slide[aria-hidden="false"] .modal__overlay {\n    animation: mmfadeIn .3s cubic-bezier(0.0, 0.0, 0.2, 1);\n}\n\n.micromodal-slide[aria-hidden="false"] .modal__container {\n    animation: mmslideIn .3s cubic-bezier(0, 0, .2, 1);\n}\n\n.micromodal-slide[aria-hidden="true"] .modal__overlay {\n    animation: mmfadeOut .3s cubic-bezier(0.0, 0.0, 0.2, 1);\n}\n\n.micromodal-slide[aria-hidden="true"] .modal__container {\n    animation: mmslideOut .3s cubic-bezier(0, 0, .2, 1);\n}\n\n.micromodal-slide .modal__container,\n.micromodal-slide .modal__overlay {\n    will-change: transform;\n}\n\n',"",{version:3,sources:["webpack://./src/modal.css"],names:[],mappings:";;AAEA,iBAAiB;AACjB;;2BAE2B;;AAE3B;IACI,iJAAiJ;AACrJ;;AAEA;IACI,eAAe;IACf,MAAM;IACN,OAAO;IACP,QAAQ;IACR,SAAS;IACT,8BAA8B;IAC9B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,aAAa;IACb,6BAA6B;IAC7B,6BAA6B;IAC7B,8BAA8B;IAC9B,kBAAkB;IAClB,kBAAkB;IAClB,gBAAgB;IAChB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,gBAAgB;IAChB,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;IACnB,wBAAwB;AAC5B;;AAEA;IACI,kBAAkB;AACtB;;;;AAIA;;6BAE6B;AAC7B;IACI;QACI,UAAU;IACd;;IAEA;QACI,UAAU;IACd;AACJ;;AAEA;IACI;QACI,UAAU;IACd;;IAEA;QACI,UAAU;IACd;AACJ;;AAEA;IACI;QACI,0BAA0B;IAC9B;;IAEA;QACI,wBAAwB;IAC5B;AACJ;;AAEA;IACI;QACI,wBAAwB;IAC5B;;IAEA;QACI,2BAA2B;IAC/B;AACJ;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,sDAAsD;AAC1D;;AAEA;IACI,kDAAkD;AACtD;;AAEA;IACI,uDAAuD;AAC3D;;AAEA;IACI,mDAAmD;AACvD;;AAEA;;IAEI,sBAAsB;AAC1B",sourcesContent:['\n\n/* modal styles */\n/**************************\\\n  Basic Modal Styles\n\\**************************/\n\n.modal {\n    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;\n}\n\n.modal__overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.6);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.modal__container {\n    background-color: #fff;\n    padding: 30px;\n    min-width: calc(100vw - 3rem);\n    max-width: calc(100% - 50rem);\n    max-height: calc(100vh - 5rem);\n    border-radius: 4px;\n    overflow-x: hidden;\n    overflow-y: auto;\n    box-sizing: border-box;\n}\n\n.modal__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.modal__title {\n    margin-top: 0;\n    margin-bottom: 0;\n    font-weight: 600;\n    font-size: 1.25rem;\n    line-height: 1.25;\n    color: var(--black);\n}\n\n.modal__close {\n    background: transparent;\n    border: 0;\n}\n\n.modal__header .modal__close:before {\n    content: "\\2715";\n}\n\n.modal__content {\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    color: rgba(0, 0, 0, .8);\n}\n\n#modal-2{\n    text-align: center;\n}\n\n\n\n/**************************\\\n    Demo Animation Style\n  \\**************************/\n@keyframes mmfadeIn {\n    from {\n        opacity: 0;\n    }\n\n    to {\n        opacity: 1;\n    }\n}\n\n@keyframes mmfadeOut {\n    from {\n        opacity: 1;\n    }\n\n    to {\n        opacity: 0;\n    }\n}\n\n@keyframes mmslideIn {\n    from {\n        transform: translateY(15%);\n    }\n\n    to {\n        transform: translateY(0);\n    }\n}\n\n@keyframes mmslideOut {\n    from {\n        transform: translateY(0);\n    }\n\n    to {\n        transform: translateY(-10%);\n    }\n}\n\n.micromodal-slide {\n    display: none;\n}\n\n.micromodal-slide.is-open {\n    display: block;\n}\n\n.micromodal-slide[aria-hidden="false"] .modal__overlay {\n    animation: mmfadeIn .3s cubic-bezier(0.0, 0.0, 0.2, 1);\n}\n\n.micromodal-slide[aria-hidden="false"] .modal__container {\n    animation: mmslideIn .3s cubic-bezier(0, 0, .2, 1);\n}\n\n.micromodal-slide[aria-hidden="true"] .modal__overlay {\n    animation: mmfadeOut .3s cubic-bezier(0.0, 0.0, 0.2, 1);\n}\n\n.micromodal-slide[aria-hidden="true"] .modal__container {\n    animation: mmslideOut .3s cubic-bezier(0, 0, .2, 1);\n}\n\n.micromodal-slide .modal__container,\n.micromodal-slide .modal__overlay {\n    will-change: transform;\n}\n\n'],sourceRoot:""}]);const A=i},226:(n,e,t)=>{t.d(e,{A:()=>A});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([n.id,'/**************************\\\n    modal content\n\n    <label class="checkbox">\n                <input type="radio" name="checkbox--input">\n                <span class="checkbox__checkmark"></span>\n              </label>\n\n  \\**************************/\n\n/* radio button style */\n.radiobox {\n    display: block;\n    position: relative;\n    padding-left: 35px;\n    margin-bottom: 12px;\n    cursor: pointer;\n    font-size: 22px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n}\n\n/* Hide the browser\'s default radio button */\n.radiobox input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n}\n\n/* Create a custom radio button */\n.radiobox__radiomark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 25px;\n    width: 25px;\n    background-color: white;\n    border: 1px var(--dark-gray) solid;\n    border-radius: 50%;\n}\n\n/* On mouse-over, add a grey background color */\n.radioox:hover input~.radiobox_radiomark {\n    background-color: #ccc;\n}\n\n/* When the radio button is checked, add a blue background */\n.radiobox input:checked~.radiobox__radiomark {\n    background-color: white;\n}\n\n/* Create the indicator (the dot/circle - hidden when not checked) */\n.radiobox__radiomark:after {\n    content: "";\n    position: absolute;\n    display: none;\n}\n\n/* Show the indicator (dot/circle) when checked */\n.radiobox input:checked~.radiobox__radiomark:after {\n    display: block;\n}\n\n/* Style the indicator (dot/circle) */\n.radiobox .radiobox__radiomark:after {\n    top: 50%;\n    left: 50%;\n    width: 14px;\n    height: 14px;\n    transform: translate(-50%, -50%);\n    border-radius: 50%;\n    background: var(--dark-cyan);\n}\n\n',"",{version:3,sources:["webpack://./src/radio.css"],names:[],mappings:"AAAA;;;;;;;;6BAQ6B;;AAE7B,uBAAuB;AACvB;IACI,cAAc;IACd,kBAAkB;IAClB,kBAAkB;IAClB,mBAAmB;IACnB,eAAe;IACf,eAAe;IACf,yBAAyB;IACzB,sBAAsB;IACtB,qBAAqB;IACrB,iBAAiB;;AAErB;;AAEA,4CAA4C;AAC5C;IACI,kBAAkB;IAClB,UAAU;IACV,eAAe;AACnB;;AAEA,iCAAiC;AACjC;IACI,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,YAAY;IACZ,WAAW;IACX,uBAAuB;IACvB,kCAAkC;IAClC,kBAAkB;AACtB;;AAEA,+CAA+C;AAC/C;IACI,sBAAsB;AAC1B;;AAEA,4DAA4D;AAC5D;IACI,uBAAuB;AAC3B;;AAEA,oEAAoE;AACpE;IACI,WAAW;IACX,kBAAkB;IAClB,aAAa;AACjB;;AAEA,iDAAiD;AACjD;IACI,cAAc;AAClB;;AAEA,qCAAqC;AACrC;IACI,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,gCAAgC;IAChC,kBAAkB;IAClB,4BAA4B;AAChC",sourcesContent:['/**************************\\\n    modal content\n\n    <label class="checkbox">\n                <input type="radio" name="checkbox--input">\n                <span class="checkbox__checkmark"></span>\n              </label>\n\n  \\**************************/\n\n/* radio button style */\n.radiobox {\n    display: block;\n    position: relative;\n    padding-left: 35px;\n    margin-bottom: 12px;\n    cursor: pointer;\n    font-size: 22px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n}\n\n/* Hide the browser\'s default radio button */\n.radiobox input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n}\n\n/* Create a custom radio button */\n.radiobox__radiomark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 25px;\n    width: 25px;\n    background-color: white;\n    border: 1px var(--dark-gray) solid;\n    border-radius: 50%;\n}\n\n/* On mouse-over, add a grey background color */\n.radioox:hover input~.radiobox_radiomark {\n    background-color: #ccc;\n}\n\n/* When the radio button is checked, add a blue background */\n.radiobox input:checked~.radiobox__radiomark {\n    background-color: white;\n}\n\n/* Create the indicator (the dot/circle - hidden when not checked) */\n.radiobox__radiomark:after {\n    content: "";\n    position: absolute;\n    display: none;\n}\n\n/* Show the indicator (dot/circle) when checked */\n.radiobox input:checked~.radiobox__radiomark:after {\n    display: block;\n}\n\n/* Style the indicator (dot/circle) */\n.radiobox .radiobox__radiomark:after {\n    top: 50%;\n    left: 50%;\n    width: 14px;\n    height: 14px;\n    transform: translate(-50%, -50%);\n    border-radius: 50%;\n    background: var(--dark-cyan);\n}\n\n'],sourceRoot:""}]);const A=i},208:(n,e,t)=>{t.d(e,{A:()=>u});var o=t(354),r=t.n(o),a=t(314),i=t.n(a),A=t(417),l=t.n(A),s=new URL(t(318),t.b),c=i()(r());c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Commissioner:wght@100..900&display=swap);"]);var d=l()(s);c.push([n.id,`:root {\n\n    /* colors */\n    --cyan: hsl(176, 50%, 47%);\n    --background: hsla(177, 100%, 96%, 0.589);\n    --dark-cyan: hsl(176, 72%, 28%);\n    --black: hsl(0, 0%, 0%);\n    --dark-gray: hsl(0, 0%, 48%);\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: "Commissioner", sans-serif;\n    font-weight: 400;\n    padding: 0;\n    margin: 0;\n    background-color:hsl(161, 51%, 93%);\n}\n\np {\n    color: var(--dark-gray);\n    font-weight: 400;\n    line-height: 2em;\n}\n\nh2,\nh3,\nh4 {\n    font-weight: 700;\n    color: var(--black);\n    margin-block: 0;\n}\n\n\n/* layout styles */\n.layout {\n    display: grid;\n    grid-template-columns: 1fr 3fr 1fr;\n}\n\n.header {\n    background-image: url(${d});\n    background-position: center center;\n    background-size: cover;\n    min-height: 40vh;\n    grid-column: 1/-1;\n}\n\n.navigation {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    padding-block: 1em;\n}\n\n.navigation--group {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    /* text-decoration: none; */\n    list-style-type: none;\n    text-transform: capitalize;\n    font-weight: 500;\n}\n\n\n.navigation--group_link {\n    color: white;\n    text-decoration: none;\n}\n\n.menu {\n    display: none;\n}\n\n.menu__image {\n    width: 100%;\n    max-width: 100%;\n}\n\n@media (max-width: 700px) {\n\n\n    .menu {\n        background-color: transparent;\n        padding: .5rem;\n        border: none;\n        display: block;\n    }\n\n    .navigation {\n        position: relative;\n    }\n\n    .navigation--group {\n        flex-direction: column;\n        gap: 1rem;\n        display: none;\n    }\n\n    .navigation--group.active {\n        background-color: white;\n        display: block;\n        padding-block: 1rem;\n        border-radius: 1rem;\n        position: absolute;\n        top: 100%;\n        width: calc(100% - 100px);\n    }\n\n    .navigation--group_link {\n        color: var(--dark-gray);\n        padding: 1rem;\n        display: block;\n        text-align: center;\n    }\n\n    .navigation--group_link:nth-child(odd) {\n        border-inline: 1px var(--dark-gray) solid;\n        background-color: red;\n    }\n\n    .card--group {\n        flex-direction: column;\n    }\n}\n\n\n.container {\n    grid-column: 2/3;\n    transform: translateY(-100px);\n    gap: 1rem;\n    display: grid;\n}\n\n.card {\n    background-color: white;\n    padding: 3rem 4rem;\n    border-radius: .5em;\n}\n\n.card--center {\n    text-align: center;\n}\n\n.card--flex {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n}\n\n.card--group {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 1rem;\n}\n\n.card--group_item:nth-child(even) {\n    border-inline: 1px var(--dark-gray) solid;\n    padding-inline: 3rem;\n}\n\n.card--group_title {\n    font-weight: 600;\n    color: var(--black);\n    font-size: 2rem;\n    display: block;\n}\n\n.button {\n    padding: 1rem 3rem;\n    border-radius: 999px;\n    border: 1px transparent;\n    font-weight: 600;\n    cursor: pointer;\n}\n\n.button--cyan {\n    background-color: var(--cyan);\n    color: white;\n}\n\n.button--gray {\n    background-color: hsla(0, 8%, 80%, 0.67);\n    color: var(--dark-gray);\n}\n\n\n.pledge {\n    display: grid;\n    gap: 1rem;\n}\n\n.pledge--item {\n    border: 1px var(--dark-gray) solid;\n    border-radius: .5rem;\n    padding: 2rem;\n}\n\n.pledge--item_flex {\n    display: flex;\n    gap: 1rem;\n    justify-content: space-between;\n    align-items: flex-start;\n}\n\n/* .pledge--item_flex div {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n} */\n\n.pledge--item_green {\n    color: var(--cyan);\n    font-weight: 500;\n}\n\n.pledge--item_title {\n    font-weight: 700;\n    color: var(--black);\n    font-size: 1.4em;\n}\n\n/* span items in the div (100 left) */\n/* .pledge--item_flex div span:nth-child(1) {\n    font-weight: 600;\n    font-size: 2.5rem;\n}\n\n.pledge--item_flex div span:nth-child(2) {\n    font-weight: 500;\n    font-size: 1rem;\n    color: var(--dark-gray);\n} */\n\n/* modal selected pledge */\n\n\n.input-with-icon {\n    position: relative;\n}\n\n.input-with-icon input {\n    padding: 1rem 1.2rem;\n    border: 1px var(--dark-gray) solid;\n    /* Space for the icon */\n    /* width: 100%; */\n    max-width: 5rem;\n    border-radius: 999px;\n}\n\n.input-with-icon i {\n    position: absolute;\n    top: 50%;\n    left: 10px;\n    transform: translateY(-50%);\n    color: var(--dark-gray);\n    /* Adjust color as needed */\n}\n\n.extra-content{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-block-start: 1px var(--dark-gray) solid;\n    padding-block-start:1rem;\n}\n\n.extra-content .extra-content--input{\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n\n@media screen and (max-width: 700px){\n    *  div{\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: flex-start;\n        width: 100%;\n    }\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Commissioner:wght@100..900&display=swap');\n\n:root {\n\n    /* colors */\n    --cyan: hsl(176, 50%, 47%);\n    --background: hsla(177, 100%, 96%, 0.589);\n    --dark-cyan: hsl(176, 72%, 28%);\n    --black: hsl(0, 0%, 0%);\n    --dark-gray: hsl(0, 0%, 48%);\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: \"Commissioner\", sans-serif;\n    font-weight: 400;\n    padding: 0;\n    margin: 0;\n    background-color:hsl(161, 51%, 93%);\n}\n\np {\n    color: var(--dark-gray);\n    font-weight: 400;\n    line-height: 2em;\n}\n\nh2,\nh3,\nh4 {\n    font-weight: 700;\n    color: var(--black);\n    margin-block: 0;\n}\n\n\n/* layout styles */\n.layout {\n    display: grid;\n    grid-template-columns: 1fr 3fr 1fr;\n}\n\n.header {\n    background-image: url(../images/image-hero-desktop.jpg);\n    background-position: center center;\n    background-size: cover;\n    min-height: 40vh;\n    grid-column: 1/-1;\n}\n\n.navigation {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    padding-block: 1em;\n}\n\n.navigation--group {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    /* text-decoration: none; */\n    list-style-type: none;\n    text-transform: capitalize;\n    font-weight: 500;\n}\n\n\n.navigation--group_link {\n    color: white;\n    text-decoration: none;\n}\n\n.menu {\n    display: none;\n}\n\n.menu__image {\n    width: 100%;\n    max-width: 100%;\n}\n\n@media (max-width: 700px) {\n\n\n    .menu {\n        background-color: transparent;\n        padding: .5rem;\n        border: none;\n        display: block;\n    }\n\n    .navigation {\n        position: relative;\n    }\n\n    .navigation--group {\n        flex-direction: column;\n        gap: 1rem;\n        display: none;\n    }\n\n    .navigation--group.active {\n        background-color: white;\n        display: block;\n        padding-block: 1rem;\n        border-radius: 1rem;\n        position: absolute;\n        top: 100%;\n        width: calc(100% - 100px);\n    }\n\n    .navigation--group_link {\n        color: var(--dark-gray);\n        padding: 1rem;\n        display: block;\n        text-align: center;\n    }\n\n    .navigation--group_link:nth-child(odd) {\n        border-inline: 1px var(--dark-gray) solid;\n        background-color: red;\n    }\n\n    .card--group {\n        flex-direction: column;\n    }\n}\n\n\n.container {\n    grid-column: 2/3;\n    transform: translateY(-100px);\n    gap: 1rem;\n    display: grid;\n}\n\n.card {\n    background-color: white;\n    padding: 3rem 4rem;\n    border-radius: .5em;\n}\n\n.card--center {\n    text-align: center;\n}\n\n.card--flex {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n}\n\n.card--group {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 1rem;\n}\n\n.card--group_item:nth-child(even) {\n    border-inline: 1px var(--dark-gray) solid;\n    padding-inline: 3rem;\n}\n\n.card--group_title {\n    font-weight: 600;\n    color: var(--black);\n    font-size: 2rem;\n    display: block;\n}\n\n.button {\n    padding: 1rem 3rem;\n    border-radius: 999px;\n    border: 1px transparent;\n    font-weight: 600;\n    cursor: pointer;\n}\n\n.button--cyan {\n    background-color: var(--cyan);\n    color: white;\n}\n\n.button--gray {\n    background-color: hsla(0, 8%, 80%, 0.67);\n    color: var(--dark-gray);\n}\n\n\n.pledge {\n    display: grid;\n    gap: 1rem;\n}\n\n.pledge--item {\n    border: 1px var(--dark-gray) solid;\n    border-radius: .5rem;\n    padding: 2rem;\n}\n\n.pledge--item_flex {\n    display: flex;\n    gap: 1rem;\n    justify-content: space-between;\n    align-items: flex-start;\n}\n\n/* .pledge--item_flex div {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n} */\n\n.pledge--item_green {\n    color: var(--cyan);\n    font-weight: 500;\n}\n\n.pledge--item_title {\n    font-weight: 700;\n    color: var(--black);\n    font-size: 1.4em;\n}\n\n/* span items in the div (100 left) */\n/* .pledge--item_flex div span:nth-child(1) {\n    font-weight: 600;\n    font-size: 2.5rem;\n}\n\n.pledge--item_flex div span:nth-child(2) {\n    font-weight: 500;\n    font-size: 1rem;\n    color: var(--dark-gray);\n} */\n\n/* modal selected pledge */\n\n\n.input-with-icon {\n    position: relative;\n}\n\n.input-with-icon input {\n    padding: 1rem 1.2rem;\n    border: 1px var(--dark-gray) solid;\n    /* Space for the icon */\n    /* width: 100%; */\n    max-width: 5rem;\n    border-radius: 999px;\n}\n\n.input-with-icon i {\n    position: absolute;\n    top: 50%;\n    left: 10px;\n    transform: translateY(-50%);\n    color: var(--dark-gray);\n    /* Adjust color as needed */\n}\n\n.extra-content{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-block-start: 1px var(--dark-gray) solid;\n    padding-block-start:1rem;\n}\n\n.extra-content .extra-content--input{\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n\n@media screen and (max-width: 700px){\n    *  div{\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: flex-start;\n        width: 100%;\n    }\n}"],sourceRoot:""}]);const u=c},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var l=this[A][0];null!=l&&(i[l]=!0)}for(var s=0;s<n.length;s++){var c=[].concat(n[s]);o&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var l=n[A],s=o.base?l[0]+o.base:l[0],c=a[s]||0,d="".concat(s," ").concat(c);a[s]=c+1;var u=t(d),m={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var p=r(m,o);o.byIndex=A,e.splice(A,0,{identifier:d,updater:p,references:1})}i.push(d)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var l=o(n,r),s=0;s<a.length;s++){var c=t(a[s]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=l}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},318:(n,e,t)=>{n.exports=t.p+"631209c1fe8e34fb78c2.jpg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(72),e=t.n(n),o=t(825),r=t.n(o),a=t(659),i=t.n(a),A=t(56),l=t.n(A),s=t(540),c=t.n(s),d=t(113),u=t.n(d),m=t(564),p={};p.styleTagTransform=u(),p.setAttributes=l(),p.insert=i().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=c(),e()(m.A,p),m.A&&m.A.locals&&m.A.locals;var g=t(226),f={};f.styleTagTransform=u(),f.setAttributes=l(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=c(),e()(g.A,f),g.A&&g.A.locals&&g.A.locals;var B=t(208),C={};function h(n){return function(n){if(Array.isArray(n))return b(n)}(n)||function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}(n)||function(n,e){if(n){if("string"==typeof n)return b(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?b(n,e):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}C.styleTagTransform=u(),C.setAttributes=l(),C.insert=i().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=c(),e()(B.A,C),B.A&&B.A.locals&&B.A.locals;var I,v,y,k,x,w=(I=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","[contenteditable]",'[tabindex]:not([tabindex^="-"])'],v=function(){function n(e){var t=e.targetModal,o=e.triggers,r=void 0===o?[]:o,a=e.onShow,i=void 0===a?function(){}:a,A=e.onClose,l=void 0===A?function(){}:A,s=e.openTrigger,c=void 0===s?"data-micromodal-trigger":s,d=e.closeTrigger,u=void 0===d?"data-micromodal-close":d,m=e.openClass,p=void 0===m?"is-open":m,g=e.disableScroll,f=void 0!==g&&g,B=e.disableFocus,C=void 0!==B&&B,b=e.awaitCloseAnimation,I=void 0!==b&&b,v=e.awaitOpenAnimation,y=void 0!==v&&v,k=e.debugMode,x=void 0!==k&&k;!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.modal=document.getElementById(t),this.config={debugMode:x,disableScroll:f,openTrigger:c,closeTrigger:u,openClass:p,onShow:i,onClose:l,awaitCloseAnimation:I,awaitOpenAnimation:y,disableFocus:C},r.length>0&&this.registerTriggers.apply(this,h(r)),this.onClick=this.onClick.bind(this),this.onKeydown=this.onKeydown.bind(this)}var e;return(e=[{key:"registerTriggers",value:function(){for(var n=this,e=arguments.length,t=new Array(e),o=0;o<e;o++)t[o]=arguments[o];t.filter(Boolean).forEach((function(e){e.addEventListener("click",(function(e){return n.showModal(e)}))}))}},{key:"showModal",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.activeElement=document.activeElement,this.modal.setAttribute("aria-hidden","false"),this.modal.classList.add(this.config.openClass),this.scrollBehaviour("disable"),this.addEventListeners(),this.config.awaitOpenAnimation?this.modal.addEventListener("animationend",(function e(){n.modal.removeEventListener("animationend",e,!1),n.setFocusToFirstNode()}),!1):this.setFocusToFirstNode(),this.config.onShow(this.modal,this.activeElement,e)}},{key:"closeModal",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=this.modal;if(this.modal.setAttribute("aria-hidden","true"),this.removeEventListeners(),this.scrollBehaviour("enable"),this.activeElement&&this.activeElement.focus&&this.activeElement.focus(),this.config.onClose(this.modal,this.activeElement,n),this.config.awaitCloseAnimation){var t=this.config.openClass;this.modal.addEventListener("animationend",(function n(){e.classList.remove(t),e.removeEventListener("animationend",n,!1)}),!1)}else e.classList.remove(this.config.openClass)}},{key:"closeModalById",value:function(n){this.modal=document.getElementById(n),this.modal&&this.closeModal()}},{key:"scrollBehaviour",value:function(n){if(this.config.disableScroll){var e=document.querySelector("body");switch(n){case"enable":Object.assign(e.style,{overflow:""});break;case"disable":Object.assign(e.style,{overflow:"hidden"})}}}},{key:"addEventListeners",value:function(){this.modal.addEventListener("touchstart",this.onClick),this.modal.addEventListener("click",this.onClick),document.addEventListener("keydown",this.onKeydown)}},{key:"removeEventListeners",value:function(){this.modal.removeEventListener("touchstart",this.onClick),this.modal.removeEventListener("click",this.onClick),document.removeEventListener("keydown",this.onKeydown)}},{key:"onClick",value:function(n){(n.target.hasAttribute(this.config.closeTrigger)||n.target.parentNode.hasAttribute(this.config.closeTrigger))&&(n.preventDefault(),n.stopPropagation(),this.closeModal(n))}},{key:"onKeydown",value:function(n){27===n.keyCode&&this.closeModal(n),9===n.keyCode&&this.retainFocus(n)}},{key:"getFocusableNodes",value:function(){var n=this.modal.querySelectorAll(I);return Array.apply(void 0,h(n))}},{key:"setFocusToFirstNode",value:function(){var n=this;if(!this.config.disableFocus){var e=this.getFocusableNodes();if(0!==e.length){var t=e.filter((function(e){return!e.hasAttribute(n.config.closeTrigger)}));t.length>0&&t[0].focus(),0===t.length&&e[0].focus()}}}},{key:"retainFocus",value:function(n){var e=this.getFocusableNodes();if(0!==e.length)if(e=e.filter((function(n){return null!==n.offsetParent})),this.modal.contains(document.activeElement)){var t=e.indexOf(document.activeElement);n.shiftKey&&0===t&&(e[e.length-1].focus(),n.preventDefault()),!n.shiftKey&&e.length>0&&t===e.length-1&&(e[0].focus(),n.preventDefault())}else e[0].focus()}}])&&function(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}(n.prototype,e),n}(),y=null,k=function(n){if(!document.getElementById(n))return console.warn("MicroModal: ❗Seems like you have missed %c'".concat(n,"'"),"background-color: #f8f9fa;color: #50596c;font-weight: bold;","ID somewhere in your code. Refer example below to resolve it."),console.warn("%cExample:","background-color: #f8f9fa;color: #50596c;font-weight: bold;",'<div class="modal" id="'.concat(n,'"></div>')),!1},x=function(n,e){if(function(n){n.length<=0&&(console.warn("MicroModal: ❗Please specify at least one %c'micromodal-trigger'","background-color: #f8f9fa;color: #50596c;font-weight: bold;","data attribute."),console.warn("%cExample:","background-color: #f8f9fa;color: #50596c;font-weight: bold;",'<a href="#" data-micromodal-trigger="my-modal"></a>'))}(n),!e)return!0;for(var t in e)k(t);return!0},{init:function(n){var e=Object.assign({},{openTrigger:"data-micromodal-trigger"},n),t=h(document.querySelectorAll("[".concat(e.openTrigger,"]"))),o=function(n,e){var t=[];return n.forEach((function(n){var o=n.attributes[e].value;void 0===t[o]&&(t[o]=[]),t[o].push(n)})),t}(t,e.openTrigger);if(!0!==e.debugMode||!1!==x(t,o))for(var r in o){var a=o[r];e.targetModal=r,e.triggers=h(a),y=new v(e)}},show:function(n,e){var t=e||{};t.targetModal=n,!0===t.debugMode&&!1===k(n)||(y&&y.removeEventListeners(),(y=new v(t)).showModal())},close:function(n){n?y.closeModalById(n):y.closeModal()}});"undefined"!=typeof window&&(window.MicroModal=w);const E=w;document.querySelector(".menu").addEventListener("click",(function(n){document.querySelector(".navigation--group").classList.toggle("active")}));var _=document.querySelectorAll(".modal--pledge_item");_.forEach((function(n){n.addEventListener("click",(function(n){var e,t,o=n.currentTarget;_.forEach((function(n){return n.style.border="1px gray solid"})),_.forEach((function(n){var e=n,t=n.querySelector(".extra-content");t&&e.removeChild(t)})),o.style.border="1px hsl(176, 50%, 47%) solid",e=o,(t=document.createElement("div")).classList.add("extra-content"),t.innerHTML="\n      \n        <span>Enter your pledge</span>\n\n       <div class='pledge--item_flex'>\n            <div class=\"input-with-icon\">\n            <input type='text'class='extra-content--input_field' placeholder=''>\n            <i class=\"fas fa-usd\"></i>\n       </div>\n        <button class='button button--cyan' type=\"submit\" id='continue'>Continue</button>\n       \n    ",e.appendChild(t),t.addEventListener("click",(function(n){if(n.stopPropagation(),"continue"==n.target.id){n.preventDefault();var e=document.querySelector(".extra-content--input_field");if(""==e.value)return void(e.style.border="1px red solid");E.close("modal-1"),E.show("modal-2")}console.log(n.target)}));var r=o.querySelector('input[type="radio"]');r&&(r.checked=!0)}))})),E.init({onShow:function(n){return console.info("".concat(n.id," is shown"))},onClose:function(n){return console.info("".concat(n.id," is hidden"))},openClass:"is-open"}),document.querySelector("#continue").addEventListener("click",(function(n){n.stopPropagation(),console.log("Form is submitted")})),document.querySelector("#finishBtn").addEventListener("click",(function(n){console.log("click on the got it button"),n.stopPropagation(),E.close("modal-2")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,